	Наиболее актуальные задачи:
Исправить в lecture-block ссылку на данные из admin-panel. Просто перенести метод на самом деле, он в админке самой не нужон (вроде).

	Взаимодействие бэка и фронта:
Дата редактирования и создания должна создаваться сразу на бэке, а то она передаётся с фронта
Роли должны иметь механизм корректировки их весомости и лёгкий инструмент к добавлению/изменению уровня доступа. Например Admin = 100, moder = 20, user = 1, block = 0

	Бэк:

Добавить проверку на существование курса при привязке теста и курса к ним 
(хз куда, может пофиг уже?)
Добавить проверку повторение позиции элементов в курсах и тестах в Core.models

Создать систему разграничения доступа пользователей к курсам, лекциям и тестам
Создать систему, при которой файлы загружаются в папку временного хранения, а затем уже, после подтверждения, сохраняются в общую папку с папками. 
При изменении изображения старое удалять.

CyberTestingPlatform.Auth.API - Реализовать систему сессий с обновляющим токеном для лучшего контроля аккаунтов
Разобраться с вариантами передачи ошибок во время процесса работы приложения с бэка на фронт

	Фронт:

БЛЯЯЯЯТЬ СДЕЛАЙ УЖЕ НОРМАЛЬНОЕ ЗАКРЫВАНИЕ МЕНЮ МОБИЛЬНОЙ ВЕРСИИ ПРИ КЛИКЕ НА СВОБОДНУЮ ОБЛАСТЬ, Я ЗАДОЛБАЛСЯ УЖЕ ТЫКАТЬСЯ ТЫСЯЧУ РАЗ В НЕРАБОЧИЙ ФУНКЦИОНАЛ И ПОТОМ ТЯНУТЬСЯ ДО КНОПКИ СВОРАЧИВАНИЯ ЭТОГО ГРЁБАННОГО ПРЯМОУГОЛЬНИКА!!! 
ахахха сегодня точно не сделаю, я ненавижу мобилку

При создании лекции требует выбора хотя бы пустого значения для курса. Иначе bad request

++ Проследить за изменением размера шрифта через личный кабинет на сайте
В input полях слишком большой текст. Сделать его большим разве что на регистрации. Сделать сохранение пользовательских настроек в localStorage

++ Реализовать отображение изображений по ссылке внутри окна с контентом
++ Создать нормальное отображение лекции
+- Реализовать функционал добавления и изменения порядка позиций лекций и тестов внутри курса.

++ Изменить систему редактирования и сохранения изменений. Убрать обновлени страницы. Нужно сделать через обновление значений переменных. С удалением тоже поработать таким образом.

Применить всё это не только к лекциям, но и к тестам (которые ещё не написаны, ага) и к курсам.

Реализовать отображение списка элементов в курсе и переход к каждому из них.

Реализовать тесты и их редактирование как с вариантами ответа, так и с возможностью вводить свой ответ, если нет предлагаемых вариантов. Правильных вариантов может быть несколько, придумать флаги для разделения свойств ответов.

Реализовать поиск курсов, лекций, тестов по названию и чему-нибудь ещё как на главной, так и в админ панели.

++ Исправить баг с отображением курса, к которому относится лекция или тест.
++ Учесть, что лекции и тесты должны выбирать среди всех курсов, а не только первых 10-20, которые появляются в админ панели.
? Подумать над удобством интерфейса...

	Общий план:
/start - приветственная информация для всех, на эту страницу направляются  не авторизованные пользователи
/login и /register - страницы для авторизации и регистрации, тут должна быть потом проверка на бан и 2fa для членов администрации.
		Далее только с активным аккаунтом
/cabinet - просмотр статистики, а именно пройденные материалы, решённые тесты и % их решения. 
Подробностей решения не будет, а будут достижения и рейтинг среди других пользователей.
Список начатых курсов и возможность клика по ним для перехода на лекции тесты курса. Начатые лекции и тесты не нужны, они и так будут в истории.
Настройка аккаунта, смена пароля.

/home (/) - списки всех доступных и недоступных курсов, лекций и тестов, которые не входят в курсы с пагинацией, поиском и сортировкой.
При клике по курсу открывается на этой же странице его содержимое, предлагается добавить данный курс  и описание, при клике по лекции или тесту сразу переход к ним.

Небольшой блок на главной странице с отображением недавно решённых заданий всеми пользователями, когда он в кабинете, то отображает записи конкретного пользователя:
В базе данных надо добавить таблицу "история": userID, object, дата завершения, % выполнения. Отображать общую историю можно хоть на главной странице, как на Якласс. Запись формируется по заверешнию теста, прочитыванию лекции (такие не выводятся для всех, а сделаны для кабинета).

/???/GuID - Персональная страница каждого курса, а затем и теста/лекции. Через запрос get получать информацию об объекте и выводить его компонент на страницу. Это будет просто страница с компонентом? Не уверен, но она должна быть примерно дочерней от home. Не делать от adminPanel!1!1!!! Мб от отдельной кстати лучше сделать, но нафиг плодить компоненты?
