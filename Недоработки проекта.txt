	Наиболее актуальные задачи:

Прикрутить уведомления при успешном создании, редактировании и удалении объектов в той же админ панели.
 
Добавить обработку множества правильных ответов на вопрос в тестах!

При редактировании нафиг пропадает элемент при сохранении. Появляется только при перезагрузке.

++ Есть некоторые отличия в работе навигации между лекциями и между тестами. Нужно выявить причину!!!
++ Отображение кнопок навигации по лекци и тесту сделать на мобилках строго вертикальным и в обратном порядке!
++ window.history.back(); использовать на просмотре ответов к тесту. Сам просмотр сделать по желанию, т.к. челу на них может быть пофиг сейчас.
++ Для Resourse API методов перенести все исключения из репозитория в уровень сервисов
++ Переделать получение всех курсов в лекциях и получать полный список только тогда, когда идёт выбор курса из выпадающего списка.
++ Вытекающая из верхней задачи проблема - надо получать как минимум текущее название курса при открывании списка на редактирование.
++ адаптировать админ панель под новую структуру лекций и курсов
++ поправить отображение картинки при загрузке в upload-container в файле custom.scss
++ КОМПОНЕНТЫ КУРСА И ЛЕКЦИИ ДОЛЖНЫ БЫТЬ САМОСТОЯТЕЛЬНЫ. 

	Взаимодействие бэка и фронта:

Роли должны иметь механизм корректировки их весомости и лёгкий инструмент к добавлению/изменению уровня доступа. Например Admin = 100, moder = 20, user = 1, block = 0

Сортировку элементов курса по позиции перенести на серверную часть. Кидать на фронт уже готовый массив
++ Дата редактирования и создания должна создаваться сразу на бэке, а то она передаётся с фронта

	Бэк:
На бэке немного переработана система получения выборки, заготовка под поиск. Для аккаунтов уже сделана, надо сделать для ResourseAPI такие же изменения и сразу после сделать поиск на главной странице.

Создать мапперы для конвертации моделей бэкэнда

Добавить проверку на существование курса при привязке теста и курса к ним 
(хз куда, может пофиг уже?)
Добавить проверку повторение позиции элементов в курсах и тестах

Создать систему разграничения доступа пользователей к курсам, лекциям и тестам
Создать систему, при которой файлы загружаются в папку временного хранения, а затем уже, после подтверждения, во время создания или редактирования объектов, сохраняются в общую папку на вечное хранение. Временная папка должна очищаться время от времени. При изменении изображения старое удалять.

CyberTestingPlatform.Auth.API - Реализовать систему сессий с обновляющим токеном для лучшего контроля аккаунтов

++ Разобраться с вариантами передачи ошибок во время процесса работы приложения с бэка на фронт

	Фронт:

Сделать сохранение пользовательских настроек в localStorage

Реализовать поиск курсов, лекций, тестов по названию и чему-нибудь ещё как на главной, так и в админ панели.

+- Реализовать функционал добавления и изменения порядка позиций лекций и тестов внутри курса. Сейчас неудобно и не понятно (это проблемы админов).

++ СДЕЛАЙ УЖЕ НОРМАЛЬНОЕ ЗАКРЫВАНИЕ МЕНЮ МОБИЛЬНОЙ ВЕРСИИ ПРИ КЛИКЕ НА СВОБОДНУЮ ОБЛАСТЬ, Я ЗАДОЛБАЛСЯ
++ Создать элемент взаимодействия курсов и лекций. Как переключения на следующий тест после последней лекции, так и подобные взаимодействия во view.
++ Реализовать тесты и их редактирование как с вариантами ответа, так и с возможностью вводить свой ответ, если нет предлагаемых вариантов. Правильных вариантов может быть несколько, придумать флаги для разделения свойств ответов.
++ При создании лекции требует выбора хотя бы пустого значения для курса. Иначе bad request
++ Проследить за изменением размера шрифта через личный кабинет на сайте
++ В input полях слишком большой текст. Сделать его большим разве что на регистрации.
++ Реализовать отображение изображений по ссылке внутри окна с контентом
++ Создать нормальное отображение лекции
++ Изменить систему редактирования и сохранения изменений. Убрать обновлени страницы. Нужно сделать через обновление значений переменных. С удалением тоже поработать таким образом.
++ Реализовать отображение списка элементов в курсе и переход к каждому из них.
++ Исправить баг с отображением курса, к которому относится лекция или тест.
++ Учесть, что лекции и тесты должны выбирать среди всех курсов, а не только первых 10-20, которые появляются в админ панели.

		Общий план:
/start - приветственная информация для всех, на эту страницу направляются  не авторизованные пользователи
/login и /register - страницы для авторизации и регистрации, тут должна быть потом проверка на бан и 2fa для членов администрации.

	Далее только с активным аккаунтом
/cabinet - просмотр статистики, а именно пройденные материалы, решённые тесты и % их решения. 
Подробностей решения не будет, а будут достижения и рейтинг среди других пользователей.
Список начатых курсов и возможность клика по ним для перехода на курс. Начатые лекции и тесты не нужны, они и так будут в истории.
Настройка аккаунта, смена пароля.

/home (/) - списки всех доступных и недоступных курсов, лекций и тестов, которые не входят в курсы с пагинацией, поиском и сортировкой.
При клике по курсу открывается на этой же странице его содержимое, предлагается добавить данный курс  и описание, при клике по лекции или тесту сразу переход к ним.

Небольшой блок на главной странице с отображением недавно решённых заданий всеми пользователями, когда он в кабинете, то отображает записи конкретного пользователя:
В базе данных надо добавить таблицу "история": userID, object, дата завершения, % выполнения. Отображать общую историю можно хоть на главной странице, как на Якласс. Запись формируется по заверешнию теста, прочитыванию лекции (такие не выводятся для всех, а сделаны для кабинета).

/???/GuID - Персональная страница каждого курса, а затем и теста/лекции.
